#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void input_array(int rows,int cols,int array[rows][cols]);//ENTER VALUES
void print_array(int rows,int cols,int array[rows][cols]);//SHOW ARRAYS
int det(int size,int array[size][size]);//CALCULATE THE DETERMINANT
int cof(int size,int array[size][size],int row,int col);//COFACTORS ARRAY 
void subArrays(int a,int b,int size,int array1[size][size],int array2[size-1][size-1]);

int main()
{
    //>>>>>>>ENTER ARRYA SIZE
    int rows,cols;
    printf("enter rows and cols: \n");
    scanf("%d %d",&rows,&cols);
    int A[rows][cols],ADJ[rows][cols],C[rows-1][cols-1];
    system("clear");
    
    printf("MATRIX A:\n");
    input_array(rows,cols,A);
    system("clear");
    printf("MATRIX A:\n");
    print_array(rows,cols,A);
    printf("\n");
    
    //SUBARRAY
    if(rows==cols)
    {
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                subArrays(i,j,rows,A,C);
                ADJ[i][j]=det(rows-1,C);
            }
        }
        printf("\nADJUNTA NO TRANSPUESTA\n");
        print_array(rows,cols,ADJ);
    }
}

void input_array(int rows,int cols,int array[rows][cols])
{
    for(int i=0;i<rows;i++)
    {
        for(int j=0;j<cols;j++)
        {
            printf("[%d][%d]= ",i,j);
            scanf("%d",&array[i][j]);
        }
    }
}

void print_array(int rows,int cols,int array[rows][cols])
{
     for(int j=0,spaces=1;j<rows*cols;j++,spaces++)
        {   
            printf("%2.0d ",array[0][j]);
            if(spaces%cols==0){printf("\n");}
        }
}

int det(int size,int array[size][size])
{
     int result=0;
    
    if(size==1){result=array[0][0];}
    
    else
    {
        for(int j=0;j<size;j++)
        {
            result+=array[0][j]*cof(size,array,0,j);
        }
    }
    return result;
}

int cof(int size,int array[size][size],int row,int col)
{
    int orden=size-1;
    int sub[orden][orden];
    int x=0,y=0;
    
    for(int i=0;i<size;i++)
    {
        for(int j=0;j<size;j++)
        {
            if((i!=row) && (j!=col))
            {
                sub[x][y]=array[i][j];
                y++;
                
                if(y>=orden)
                {
                    x++;
                    y=0;
                }
            }
        }
    } 
    return pow(-1.0,row+col)*det(orden,sub);
}

void subArrays(int a,int b,int size,int array1[size][size],int array2[size-1][size-1])
{
    for(int i=0,k=0;i<size;i++)
    {
        if(i!=a)
        {
            for(int j=0,l=0;j<size;j++)
            {
                if(j!=b)
                {
                    array2[k][l]=array1[i][j];
                    l++;
                }
            }
        k++;
        }
    }
}

